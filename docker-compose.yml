services:
  dokku_api:
    restart: always
    image: python:3.11
    env_file: .env
    working_dir: /app
    volumes:
      - ./:/app
      - "${RSA_KEY_FILE}:/tmp/id_rsa:ro"
      - type: volume
        source: dokku_api_secrets
        target: /app/.secrets
    ports:
      - "${PORT}:${PORT}"
    command: >
      bash -c '
        set -e

        cp /tmp/id_rsa /app/.secrets/id_rsa &&
        chmod 600 /app/.secrets/id_rsa

        RSA_KEY_PASSPHRASE="$$(awk '\''{printf "%s\\\\n", $$0}'\'' /app/.secrets/id_rsa)"

        export SSH_KEY_PASSPHRASE=$${RSA_KEY_PASSPHRASE}
        export SSH_KEY_PATH=/app/.secrets/id_rsa

        pip install poetry > /dev/null &&
        poetry install --no-root > /dev/null

        poetry run python -m src
      '
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  unit-test:
    image: python:3.11
    env_file: .env
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c '
      pip install poetry && poetry install --no-root; 
      poetry run coverage run -m unittest discover -s src.tests --verbose &&
      poetry run coverage report;'

  lint:
    image: python:3.11
    env_file: .env
    working_dir: /app
    volumes:
      - ./:/app
    command: sh -c 'pip install poetry && poetry install --no-root; poetry run flake8 src;'

  mysql:
    image: mysql:8.0
    ports:
      - "${DB_PORT}:${DB_PORT}"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_USER}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
  dokku_api_secrets: